// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Admin {
  id    Int     @default(autoincrement()) @id
  email String  @unique
	password String
  name  String?
	 createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt


}

model Subject{
	id    Int     @default(autoincrement()) @id
	name String

	subject_id Int?   
	 subject Subject? @relation("baseSubject",fields:[subject_id],references: [id],onDelete: Cascade)
	baseSubject Subject[]  @relation("baseSubject")
	 createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

	quiz Quiz[]

	
}


model Quiz{
		id    Int     @default(autoincrement()) @id
		name String
		level Int
questions  Question[]
 subject Subject @relation(fields:[subject_id],references: [id],onDelete: Cascade)
subject_id Int

 createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

}

model Question{
 id    Int     @default(autoincrement()) @id
 question String
 quiz Quiz @relation(fields:[quiz_id],references: [id],onDelete: Cascade)
quiz_id Int


options Option[]

 createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

}

model Option{
	id    Int     @default(autoincrement()) @id
	description String
	isRight Boolean
	
questions Question @relation(fields:[question_id],references: [id],onDelete: Cascade)
question_id Int

 createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt


}
